{"version":3,"file":"static/js/309.0bdd8bfd.chunk.js","mappings":"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","sources":["api/api.js","webpack://react-homework-template/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","webpack://react-homework-template/./src/pages/MoviesSearch/MoviesSearch.module.css?b4a0","pages/MoviesSearch/MoviesSearch.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: '8bf2aab2134fe939645810fc64f5815e',\n  language: 'en-US',\n};\n\nexport const getAllMovie = async () => {\n  const { data } = await axios.get('trending/movie/day');\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(`movie/${id}`);\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await axios.get(`movie/${id}/credits`);\n  return data;\n};\n\nexport const getMovieReview = async id => {\n  const { data } = await axios.get(`movie/${id}/reviews`);\n  return data;\n};\n\nexport const getSearchMovie = async query => {\n  const { data } = await axios.get(`search/movie?query=${query}`);\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchWrap\":\"SearchForm_searchWrap__JzBsr\",\"searchForm\":\"SearchForm_searchForm__NsJpF\",\"searchBtn\":\"SearchForm_searchBtn__rp2a7\",\"searchInput\":\"SearchForm_searchInput__h6REp\"};","import React from 'react';\nimport { useState } from 'react';\nimport css from './SearchForm.module.css';\nimport Notiflix from 'notiflix';\n\nconst SearchForm = ({ onSubmit }) => {\n  const [value, setValue] = useState('');\n\n  const handleChange = ({ target: { value } }) => {\n    setValue(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (value.trim() === '') {\n      return Notiflix.Notify.warning('Enter the text in the search field');\n    }\n    onSubmit(value);\n    setValue('');\n  };\n\n  return (\n    <div className={css.searchWrap}>\n      <form className={css.searchForm} onSubmit={handleSubmit}>\n        <input\n          className={css.searchInput}\n          type=\"text\"\n          onChange={handleChange}\n          name=\"title\"\n          value={value}\n          placeholder=\"Search for movies...\"\n        />\n        <button className={css.searchBtn} type=\"submit\">\n          Search\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default SearchForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"searchMoviesWrap\":\"MoviesSearch_searchMoviesWrap__fpMK2\",\"searchMoviesTitle\":\"MoviesSearch_searchMoviesTitle__LVNTG\",\"searchMoviesItem\":\"MoviesSearch_searchMoviesItem__GuomZ\",\"searchMoviesLink\":\"MoviesSearch_searchMoviesLink__u7J5b\"};","import React, { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { getSearchMovie } from 'api/api';\nimport Loader from 'components/Loader/Loader';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport css from './MoviesSearch.module.css';\nimport Notiflix from 'notiflix';\n\nconst MovieSearch = () => {\n  const [error, setError] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  const query = searchParams.get('search');\n\n  const handleSetSearchQuery = value => {\n    setSearchParams({ search: value });\n  };\n\n  useEffect(() => {\n    const fetchSearchMovies = async () => {\n      try {\n        setIsLoading(true);\n        setError('');\n        const data = await getSearchMovie(query);\n        if (data.results.length === 0) {\n          Notiflix.Notify.info('Movies not found');\n          setMovies([]);\n        }\n        setMovies(data.results);\n      } catch (error) {\n        setError(error.message);\n        Notiflix.Notify.failure(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    query && fetchSearchMovies();\n  }, [query]);\n\n  return (\n    <div>\n      <SearchForm onSubmit={handleSetSearchQuery} />\n      {isLoading && <Loader />}\n      {query && movies.length > 0 && !error ? (\n        <div className={css.searchMoviesWrap}>\n          <h2 className={css.searchMoviesTitle}>Search Results</h2>\n          <ul>\n            {movies.map(movie => (\n              <li className={css.searchMoviesItem} key={movie.id}>\n                <Link\n                  className={css.searchMoviesLink}\n                  to={`${movie.id}`}\n                  state={{ from: location }}\n                >\n                  {movie.title}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : null}\n    </div>\n  );\n};\nexport default MovieSearch;\n"],"names":["axios","api_key","language","getAllMovie","data","getMovieById","id","getMovieCast","getMovieReview","getSearchMovie","query","onSubmit","useState","value","setValue","className","css","e","preventDefault","trim","Notiflix","type","onChange","target","name","placeholder","error","setError","movies","setMovies","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","location","useLocation","get","useEffect","fetchSearchMovies","results","length","message","search","Loader","map","movie","to","state","from","title"],"sourceRoot":""}