{"version":3,"file":"static/js/218.a6e109aa.chunk.js","mappings":"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","sources":["api/api.js","webpack://react-homework-template/./src/pages/MovieDetail/MovieDetail.module.css?06cc","pages/MovieDetail/MovieDetail.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: '8bf2aab2134fe939645810fc64f5815e',\n  language: 'en-US',\n};\n\nexport const getAllMovie = async () => {\n  const { data } = await axios.get('trending/movie/day');\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(`movie/${id}`);\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await axios.get(`movie/${id}/credits`);\n  return data;\n};\n\nexport const getMovieReview = async id => {\n  const { data } = await axios.get(`movie/${id}/reviews`);\n  return data;\n};\n\nexport const getSearchMovie = async query => {\n  const { data } = await axios.get(`search/movie?query=${query}`);\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movieWrap\":\"MovieDetail_movieWrap__RUw4w\",\"backBtn\":\"MovieDetail_backBtn__wjjt5\",\"movieContainer\":\"MovieDetail_movieContainer__1wjdT\",\"movieImg\":\"MovieDetail_movieImg__BVFGJ\",\"movieInfoWrap\":\"MovieDetail_movieInfoWrap__crR0h\",\"moviesTitle\":\"MovieDetail_moviesTitle__u4Grr\",\"movieInfoList\":\"MovieDetail_movieInfoList__G8RJ9\",\"movieInfoLink\":\"MovieDetail_movieInfoLink__VrqBg\"};","import React, { useEffect, useState } from 'react';\nimport { Link, useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { getMovieById } from 'api/api';\nimport { Outlet } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport css from './MovieDetail.module.css';\nimport Notiflix from 'notiflix';\n\nconst MovieDetail = ({ baseImgUrl }) => {\n  const { id } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const handleGoBack = () => {\n    navigate(location?.state?.from ?? '/');\n  };\n\n  useEffect(() => {\n    async function fetchMovieData() {\n      try {\n        // setIsLoading(true);\n        setError('');\n        const movieData = await getMovieById(id);\n        setMovie(movieData);\n      } catch (error) {\n        setError(error.message);\n        Notiflix.Notify.failure(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    fetchMovieData();\n  }, [id]);\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  if (!movie) {\n    return <div>Movie not found</div>;\n  }\n\n  const { poster_path, title, overview, release_date, vote_average, genres } =\n    movie;\n  const releaseDate = new Date(release_date);\n\n  return (\n    <>\n      <div className={css.movieWrap}>\n        <button className={css.backBtn} onClick={handleGoBack}>\n          Go back\n        </button>\n        {movie && !error && (\n          <div className={css.movieContainer}>\n            <img\n              className={css.movieImg}\n              src={`${baseImgUrl}${poster_path}`}\n              alt={title}\n            />\n            <div className={css.movieInfoWrap}>\n              <h1 className={css.moviesTitle}>\n                {title} <span>{`(${releaseDate.getFullYear()})`}</span>\n              </h1>\n              <p>User Score: {Math.round(vote_average * 10)}%</p>\n              <h2 className={css.moviesTitle}>Overview</h2>\n              <p>{overview}</p>\n              <h2 className={css.moviesTitle}>Genres</h2>\n              <ul>\n                {genres &&\n                  genres.map(genre => <li key={genre.id}>{genre.name}</li>)}\n              </ul>\n\n              <h2 className={css.moviesTitle}>Additional information</h2>\n              <ul className={css.movieInfoList}>\n                <li className={css.movieInfoItem}>\n                  <Link\n                    className={css.movieInfoLink}\n                    to=\"cast\"\n                    state={{ from: location?.state?.from ?? '/' }}\n                  >\n                    Cast\n                  </Link>\n                </li>\n                <li className={css.movieInfoItem}>\n                  <Link\n                    className={css.movieInfoLink}\n                    to=\"reviews\"\n                    state={{ from: location?.state?.from ?? '/' }}\n                  >\n                    Review\n                  </Link>\n                </li>\n              </ul>\n            </div>\n          </div>\n        )}\n      </div>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetail;\n"],"names":["axios","api_key","language","getAllMovie","data","getMovieById","id","getMovieCast","getMovieReview","getSearchMovie","query","baseImgUrl","useParams","useState","movie","setMovie","isLoading","setIsLoading","error","setError","location","useLocation","navigate","useNavigate","useEffect","movieData","message","Notiflix","fetchMovieData","Loader","poster_path","title","overview","release_date","vote_average","genres","releaseDate","Date","className","css","onClick","state","from","src","alt","getFullYear","Math","round","map","genre","name","to"],"sourceRoot":""}