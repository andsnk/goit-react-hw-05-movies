{"version":3,"file":"static/js/76.f9600a03.chunk.js","mappings":"8SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,mCACTC,SAAU,SAGL,IAAMC,EAAW,mCAAG,sGACFH,EAAAA,EAAAA,IAAU,sBADR,uBACjBI,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,qDAKXC,EAAY,mCAAG,WAAMC,GAAN,yFACHN,EAAAA,EAAAA,IAAA,gBAAmBM,IADhB,uBAClBF,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZG,EAAY,mCAAG,WAAMD,GAAN,yFACHN,EAAAA,EAAAA,IAAA,gBAAmBM,EAAnB,aADG,uBAClBF,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZI,EAAc,mCAAG,WAAMF,GAAN,yFACLN,EAAAA,EAAAA,IAAA,gBAAmBM,EAAnB,aADK,uBACpBF,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdK,EAAc,mCAAG,WAAMC,GAAN,yFACLV,EAAAA,EAAAA,IAAA,6BAAgCU,IAD3B,uBACpBN,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,qD,8IC3B3B,EAA2B,uBAA3B,EAA6D,uBAA7D,EAA+F,uBAA/F,EAAqI,2BAArI,EAA2K,uB,2BC4D3K,EApDa,SAAC,GAAoB,IAAlBO,EAAiB,EAAjBA,WACNL,GAAOM,EAAAA,EAAAA,MAAPN,GACR,GAA0BO,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEIH,GAAa,GACbE,EAAS,IAHb,UAI2BZ,EAAAA,EAAAA,IAAaD,GAJxC,OAIUe,EAJV,OAKIN,EAASM,EAASC,MALtB,gDAOIC,IAAAA,OAAAA,QAAwB,KAAMC,SAPlC,yBASIP,GAAa,GATjB,6EADc,uBAAC,WAAD,wBAadQ,EACD,GAAE,CAACnB,KAGF,iBAAKoB,UAAWC,EAAhB,UACGX,IAAa,SAACY,EAAA,EAAD,IACbV,GAAS,CAAEA,MAAAA,IAEZ,eAAIQ,UAAWC,EAAf,SACoB,IAAjBb,EAAMe,QACL,uBAAG,iDAEHf,EAAMgB,KAAI,YAA4C,IAAzCxB,EAAwC,EAAxCA,GAAIyB,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAC1BC,EAAWD,EAAY,UACtBtB,GADsB,OACTsB,GADS,UAEtBE,2BAFsB,iBAG7B,OACE,gBAAIT,UAAWC,EAAf,WACE,gBAAKS,IAAKF,EAAUG,IAAKN,EAAMO,OAAQ,WAEvC,iBAAKZ,UAAWC,EAAhB,WACE,cAAGD,UAAWC,EAAd,SAA6BI,KAC7B,yBAAG,cAAYC,UALe1B,EASrC,QAKV,C","sources":["api/api.js","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: '8bf2aab2134fe939645810fc64f5815e',\n  language: 'en-US',\n};\n\nexport const getAllMovie = async () => {\n  const { data } = await axios.get('trending/movie/day');\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(`movie/${id}`);\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await axios.get(`movie/${id}/credits`);\n  return data;\n};\n\nexport const getMovieReview = async id => {\n  const { data } = await axios.get(`movie/${id}/reviews`);\n  return data;\n};\n\nexport const getSearchMovie = async query => {\n  const { data } = await axios.get(`search/movie?query=${query}`);\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"castWrap\":\"Cast_castWrap__C23u0\",\"castList\":\"Cast_castList__ARoWn\",\"castItem\":\"Cast_castItem__-Jcfe\",\"castInfoWrap\":\"Cast_castInfoWrap__xH4Pi\",\"castName\":\"Cast_castName__-i08u\"};","import { getMovieCast } from 'api/api';\nimport Loader from 'components/Loader/Loader';\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport css from './Cast.module.css';\nimport Notiflix from 'notiflix';\n\nconst Cast = ({ baseImgUrl }) => {\n  const { id } = useParams();\n  const [casts, setCasts] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    async function fetchCastData() {\n      try {\n        setIsLoading(true);\n        setError('');\n        const castData = await getMovieCast(id);\n        setCasts(castData.cast);\n      } catch (error) {\n        Notiflix.Notify.failure(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchCastData();\n  }, [id]);\n\n  return (\n    <div className={css.castWrap}>\n      {isLoading && <Loader />}\n      {error && { error }}\n\n      <ul className={css.castList}>\n        {casts.length === 0 ? (\n          <p>We donâ€™t have any casts for this movie.</p>\n        ) : (\n          casts.map(({ id, name, character, profile_path }) => {\n            const imageUrl = profile_path\n              ? `${baseImgUrl}${profile_path}`\n              : `${process.env.PUBLIC_URL}/notfound.jpg`;\n            return (\n              <li className={css.castItem} key={id}>\n                <img src={imageUrl} alt={name} height={'300px'} />\n\n                <div className={css.castInfoWrap}>\n                  <p className={css.castName}>{name}</p>\n                  <p>Character: {character}</p>\n                </div>\n              </li>\n            );\n          })\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["axios","api_key","language","getAllMovie","data","getMovieById","id","getMovieCast","getMovieReview","getSearchMovie","query","baseImgUrl","useParams","useState","casts","setCasts","isLoading","setIsLoading","error","setError","useEffect","castData","cast","Notiflix","message","fetchCastData","className","css","Loader","length","map","name","character","profile_path","imageUrl","process","src","alt","height"],"sourceRoot":""}